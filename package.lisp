(defpackage #:ski
  (:use #:cl)
  (:shadow #:variable)
  (:export
   #:term
   #:term-p
   #:variable
   #:name
   #:variable-p
   #:same-variable-p
   #:make-variable-name-generator
   #:generate-name
   #:application
   #:left
   #:right
   #:application-p
   #:occurs-free-p
   #:print-term
   #:term-equal
   #:reduce-term
   #:combinator-driver-loop
   #:combinator-term
   #:combinator-term-p
   #:combinator
   #:arity
   #:combinator-p
   #:make-combinator-variable
   #:combinator-variable-p
   #:make-combinator-application
   #:combinator-application-p
   #:define-combinator
   #:get-combinator
   #:lambda-term
   #:lambda-term-p
   #:make-lambda-variable
   #:lambda-variable-p
   #:make-lambda-application
   #:lambda-application-p
   #:make-lambda-abstraction
   #:lambda-abstraction-p
   #:body
   #:free-variables
   #:bound-variables
   #:substitute-avoiding-capture
   #:lambda-combinator-p
   #:lambda-driver-loop
   #:sk->goedel
   #:goedel->sk
   #:natural->church
   #:church->natural
   #:natural->barendregt
   #:barendregt->natural
   #:combinator->ski
   #:lambda->ski
   #:lambda->sk
   #:parse-combinator-term
   #:parse-lambda-term
   #:build-lambda-program
   #:run-lambda-program
   #:run-combinator-program))
